@model TCCCMS.Models.ManualViewModel

@{
    ViewBag.Title = "SearchList";
}
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
@section Styles{
    <link href="~/Scripts/highlight/css/default.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">*@
    <link href="~/css/Pager.css" rel="stylesheet" />
    <style type="text/css">
        /*span.highlight {
            background-color: yellow;
            font-weight: bold;
        }*/

        .highlight {
            background: #b6ff00;
            padding: 1px;
            border: #00CC00 dotted 1px;
        }
    </style>

}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>


@*<h2>SearchList</h2>*@
<div class="">

    <h2>Your search for "@(Model.SearchText)" returned @Model.Pagination.Count result(s).</h2>

    <div class="container searchdContent">

        @foreach (var item in Model.ManualList)
        {
            <div class="card marginTP10">
                <div class="card-header">
                    @Html.HiddenFor(modelItem => item.ManualId)
                    @*<a href='@(item.FilePath + "/"+ item.Name )'  >
                            <h5>@Html.DisplayFor(modelItem => item.Name)</h5>
                        </a>*@
                    @*<a href="@Url.Action(item.ActionName,item.ControllerName)">
                            <h5>@Html.DisplayFor(modelItem => item.ManualFileName)</h5>
                        </a>*@
                    @*var fname =item.ManualFileName.Split('.')[0];*@
                    <a href="@Url.Action("Pages", item.ControllerName, new { @actionName = item.ActionName, @fileName= item.ManualFileName.Split('.')[0]})">
                        <h5>@Html.DisplayFor(modelItem => item.ManualFileName)</h5>
                    </a>
                </div>
                <div class="card-body">
                    @Html.DisplayFor(modelItem => item.ManualBodyText)
                </div>
            </div>


        }

    </div>

    <div class="container marginTP10">
        @*<nav aria-label="Page navigation">*@
        @*<ul class="pagination flex-wrap">
            <li class="page-item @(Model.Pagination.EnablePrevious ? " " : " disabled" )">
                <a href="@Url.Action("SearchList", new { currentPage = 1, text = @Model.SearchText, volNo = Model.VolumeId })"
                   class="page-link" aria-label="Frist">
                    <span aria-hidden="true">|<</span>
                    <span class="sr-only">First</span>
                </a>

            </li>
            <li class="page-item @(Model.Pagination.EnablePrevious ? " " : " disabled" )">
                <a href="@Url.Action("SearchList", new { currentPage = (Model.Pagination.CurrentPage - 1), text = @Model.SearchText, volNo = Model.VolumeId })"
                   class="page-link" aria-label="Next">
                    <span aria-hidden="true"><</span>
                    <span class="sr-only">Next</span>
                </a>

            </li>

            @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Pagination.CurrentPage ? " active" : "" )">
                    <a href="@Url.Action("SearchList", new { currentPage = @i, text = @Model.SearchText, volNo = Model.VolumeId })" class="page-link">@i</a>

                    </li>
            }



            <li class="page-item @(Model.Pagination.EnableNext ? " " : " disabled" )">
                <a href="@Url.Action("SearchList", new { currentPage = (Model.Pagination.CurrentPage + 1), text = @Model.SearchText, volNo = Model.VolumeId })"
                   class="page-link" aria-label="Previous">
                    <span aria-hidden="true">></span>
                    <span class="sr-only">Previous</span>
                </a>

            </li>
            <li class="page-item @(Model.Pagination.EnableNext ? " " : " disabled" )">
                <a href="@Url.Action("SearchList", new { currentPage = @Model.Pagination.TotalPages, text = @Model.SearchText, volNo = Model.VolumeId })"
                   class="page-link" aria-label="Last">
                    <span aria-hidden="true">>|</span>
                    <span class="sr-only">Last</span>
                </a>

            </li>
        </ul>*@

        <!--************************************************************************************************************************************-->
        <!-- pager -->
        @*@if (Model.Pager.EndPage > 1)
        {
            <ul class="pagination">
                @if (Model.Pager.CurrentPage > 1)
                {
                    <li>
                        <a href="@Url.Action("SearchList", new { currentPage = 1, text = @Model.SearchText, volNo = Model.VolumeId })">
                            
                            <span aria-hidden="true">|<</span>
                            <span class="sr-only">First</span>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("SearchList", new { currentPage = (Model.Pager.CurrentPage - 1), text = @Model.SearchText, volNo = Model.VolumeId })">

                           
                            <span aria-hidden="true"><</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                }

                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                        <a href="@Url.Action("SearchList", new { currentPage = page, text = @Model.SearchText, volNo = Model.VolumeId })">@page</a>
                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a href="@Url.Action("SearchList", new { currentPage = (Model.Pager.CurrentPage + 1), text = @Model.SearchText, volNo = Model.VolumeId })">
                           
                            <span aria-hidden="true">></span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("SearchList", new { currentPage = (Model.Pager.TotalPages), text = @Model.SearchText, volNo = Model.VolumeId })">
                           
                            <span aria-hidden="true">>|</span>
                            <span class="sr-only">Last</span>
                        </a>
                    </li>
                }
            </ul>
        }*@


        @*</nav>*@

        @Html.Partial("_pvPager");
    </div>











</div>

@section Scripts{

    <script src="~/js/Manual/ManualSearch.js"></script>
    <script type="text/javascript">
        window.addEventListener("pageshow", function (event) {
            var historyTraversal = event.persisted || (typeof this.window.performance != "undefined" && window.performance.navigation.type === 2);
            if (historyTraversal) {
                //handle page restore
                window.location.reload();
            }

        });
    </script>

}
